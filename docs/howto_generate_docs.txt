WARNING: This is primarily intended for personal use by PE within my local
copy of the repository; it is *not* a general guideline for building the
docs.

The general logic of our current approach is as follows:

A. We use doxygen to generate XML files with info from comments in the actual
source code; these are written to docs/xml/

B. We use Sphinx to generate pretty HTML files for the online documentation
(including auto-generation of same on readthedocs.org).

C. We include (some of) the doxygen-generated documentation in the Sphinx
documentation, via the "breathe" extension for Sphinx. This is done via a
few lines in index.rst and the explicit use of breathe-defined "directives"
in the .rst files in the api_ref/ directory.

See for example https://breathe.readthedocs.io/en/latest/class.html#class-example
for the various breathe-defined directives.



MAKING THIS WORK ON READTHEDOCS:

We needed to do *two* things to get this to work on readthedocs.org:

1. Edit the conf.py file (as suggested in the breathe docs) to include:

A. Have doxygen run *if* we're building the docs on readthedocs (don't
include the initial two spaces)

  import subprocess, os

  read_the_docs_build = os.environ.get('READTHEDOCS', None) == 'True'

  if read_the_docs_build:
      subprocess.call('cd ../; doxygen docs/Doxyfile', shell=True)

B. Add "breathe" to the the "extensions" list, and a couple of extra
lines with breathe-specific setupL: (the "sphinx.ext.imgmath" is
just some extra stuff to potentially make math coding work)

  extensions = ["breathe", "sphinx.ext.imgmath"]
  breathe_projects = {"Imfit": "./xml/" }
  breathe_default_project = "Imfit"


2. Add a minimalist "requirements.txt" file with the line

breathe

so that readthedocs knows we actually need the breathe library...



GENERAL WORKFLOW OUTLINE:

1. Update Markdown files; use BBEdit Markup->Preview to check on how it looks
while editing them.

2. Update rST files if needed: index.rst; api_ref/api_index.rst, other
api-related .rst files in that directory.

3. Generate rST versions of the Markdown files (by running convert_md_to_rst.sh
script) and test the Sphinx HTML generation by running Sphinx via the
Makefile

	$ ./convert_md_to_rst.sh && make html

View the resulting docs in a web browser pointed at 
	file:///Users/erwin/coding/imfit/docs/_build/html/index.html

If things look good, commit the changes to the Mercurial repo and push
to Github.
